/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OrgsOrgIdRouteImport } from './routes/orgs_.$orgId'
import { Route as AuthCallbackRouteImport } from './routes/auth.callback'
import { Route as OrgsOrgIdMembersRouteImport } from './routes/orgs_.$orgId_.members'
import { Route as OrgsOrgIdTeamsTeamIdRouteImport } from './routes/orgs_.$orgId_.teams_.$teamId'
import { Route as OrgsOrgIdTeamsTeamIdMembersRouteImport } from './routes/orgs_.$orgId_.teams_.$teamId_.members'
import { Route as OrgsOrgIdTeamsTeamIdSprintsSprintIdRouteImport } from './routes/orgs_.$orgId_.teams_.$teamId_.sprints_.$sprintId'

// Create/Update Routes

const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrgsOrgIdRoute = OrgsOrgIdRouteImport.update({
  id: '/orgs_/$orgId',
  path: '/orgs/$orgId',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

const OrgsOrgIdMembersRoute = OrgsOrgIdMembersRouteImport.update({
  id: '/orgs_/$orgId_/members',
  path: '/orgs/$orgId/members',
  getParentRoute: () => rootRoute,
} as any)

const OrgsOrgIdTeamsTeamIdRoute = OrgsOrgIdTeamsTeamIdRouteImport.update({
  id: '/orgs_/$orgId_/teams_/$teamId',
  path: '/orgs/$orgId/teams/$teamId',
  getParentRoute: () => rootRoute,
} as any)

const OrgsOrgIdTeamsTeamIdMembersRoute =
  OrgsOrgIdTeamsTeamIdMembersRouteImport.update({
    id: '/orgs_/$orgId_/teams_/$teamId_/members',
    path: '/orgs/$orgId/teams/$teamId/members',
    getParentRoute: () => rootRoute,
  } as any)

const OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute =
  OrgsOrgIdTeamsTeamIdSprintsSprintIdRouteImport.update({
    id: '/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId',
    path: '/orgs/$orgId/teams/$teamId/sprints/$sprintId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRoute
    }
    '/orgs_/$orgId': {
      id: '/orgs_/$orgId'
      path: '/orgs/$orgId'
      fullPath: '/orgs/$orgId'
      preLoaderRoute: typeof OrgsOrgIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/orgs_/$orgId_/members': {
      id: '/orgs_/$orgId_/members'
      path: '/orgs/$orgId/members'
      fullPath: '/orgs/$orgId/members'
      preLoaderRoute: typeof OrgsOrgIdMembersRouteImport
      parentRoute: typeof rootRoute
    }
    '/orgs_/$orgId_/teams_/$teamId': {
      id: '/orgs_/$orgId_/teams_/$teamId'
      path: '/orgs/$orgId/teams/$teamId'
      fullPath: '/orgs/$orgId/teams/$teamId'
      preLoaderRoute: typeof OrgsOrgIdTeamsTeamIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/orgs_/$orgId_/teams_/$teamId_/members': {
      id: '/orgs_/$orgId_/teams_/$teamId_/members'
      path: '/orgs/$orgId/teams/$teamId/members'
      fullPath: '/orgs/$orgId/teams/$teamId/members'
      preLoaderRoute: typeof OrgsOrgIdTeamsTeamIdMembersRouteImport
      parentRoute: typeof rootRoute
    }
    '/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId': {
      id: '/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId'
      path: '/orgs/$orgId/teams/$teamId/sprints/$sprintId'
      fullPath: '/orgs/$orgId/teams/$teamId/sprints/$sprintId'
      preLoaderRoute: typeof OrgsOrgIdTeamsTeamIdSprintsSprintIdRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/sign-in' {
  const createFileRoute: CreateFileRoute<
    '/sign-in',
    FileRoutesByPath['/sign-in']['parentRoute'],
    FileRoutesByPath['/sign-in']['id'],
    FileRoutesByPath['/sign-in']['path'],
    FileRoutesByPath['/sign-in']['fullPath']
  >
}
declare module './routes/auth.callback' {
  const createFileRoute: CreateFileRoute<
    '/auth/callback',
    FileRoutesByPath['/auth/callback']['parentRoute'],
    FileRoutesByPath['/auth/callback']['id'],
    FileRoutesByPath['/auth/callback']['path'],
    FileRoutesByPath['/auth/callback']['fullPath']
  >
}
declare module './routes/orgs_.$orgId' {
  const createFileRoute: CreateFileRoute<
    '/orgs_/$orgId',
    FileRoutesByPath['/orgs_/$orgId']['parentRoute'],
    FileRoutesByPath['/orgs_/$orgId']['id'],
    FileRoutesByPath['/orgs_/$orgId']['path'],
    FileRoutesByPath['/orgs_/$orgId']['fullPath']
  >
}
declare module './routes/orgs_.$orgId_.members' {
  const createFileRoute: CreateFileRoute<
    '/orgs_/$orgId_/members',
    FileRoutesByPath['/orgs_/$orgId_/members']['parentRoute'],
    FileRoutesByPath['/orgs_/$orgId_/members']['id'],
    FileRoutesByPath['/orgs_/$orgId_/members']['path'],
    FileRoutesByPath['/orgs_/$orgId_/members']['fullPath']
  >
}
declare module './routes/orgs_.$orgId_.teams_.$teamId' {
  const createFileRoute: CreateFileRoute<
    '/orgs_/$orgId_/teams_/$teamId',
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId']['parentRoute'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId']['id'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId']['path'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId']['fullPath']
  >
}
declare module './routes/orgs_.$orgId_.teams_.$teamId_.members' {
  const createFileRoute: CreateFileRoute<
    '/orgs_/$orgId_/teams_/$teamId_/members',
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/members']['parentRoute'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/members']['id'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/members']['path'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/members']['fullPath']
  >
}
declare module './routes/orgs_.$orgId_.teams_.$teamId_.sprints_.$sprintId' {
  const createFileRoute: CreateFileRoute<
    '/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId',
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId']['parentRoute'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId']['id'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId']['path'],
    FileRoutesByPath['/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId']['fullPath']
  >
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/orgs/$orgId': typeof OrgsOrgIdRoute
  '/orgs/$orgId/members': typeof OrgsOrgIdMembersRoute
  '/orgs/$orgId/teams/$teamId': typeof OrgsOrgIdTeamsTeamIdRoute
  '/orgs/$orgId/teams/$teamId/members': typeof OrgsOrgIdTeamsTeamIdMembersRoute
  '/orgs/$orgId/teams/$teamId/sprints/$sprintId': typeof OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/orgs/$orgId': typeof OrgsOrgIdRoute
  '/orgs/$orgId/members': typeof OrgsOrgIdMembersRoute
  '/orgs/$orgId/teams/$teamId': typeof OrgsOrgIdTeamsTeamIdRoute
  '/orgs/$orgId/teams/$teamId/members': typeof OrgsOrgIdTeamsTeamIdMembersRoute
  '/orgs/$orgId/teams/$teamId/sprints/$sprintId': typeof OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/orgs_/$orgId': typeof OrgsOrgIdRoute
  '/orgs_/$orgId_/members': typeof OrgsOrgIdMembersRoute
  '/orgs_/$orgId_/teams_/$teamId': typeof OrgsOrgIdTeamsTeamIdRoute
  '/orgs_/$orgId_/teams_/$teamId_/members': typeof OrgsOrgIdTeamsTeamIdMembersRoute
  '/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId': typeof OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/auth/callback'
    | '/orgs/$orgId'
    | '/orgs/$orgId/members'
    | '/orgs/$orgId/teams/$teamId'
    | '/orgs/$orgId/teams/$teamId/members'
    | '/orgs/$orgId/teams/$teamId/sprints/$sprintId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/auth/callback'
    | '/orgs/$orgId'
    | '/orgs/$orgId/members'
    | '/orgs/$orgId/teams/$teamId'
    | '/orgs/$orgId/teams/$teamId/members'
    | '/orgs/$orgId/teams/$teamId/sprints/$sprintId'
  id:
    | '__root__'
    | '/'
    | '/sign-in'
    | '/auth/callback'
    | '/orgs_/$orgId'
    | '/orgs_/$orgId_/members'
    | '/orgs_/$orgId_/teams_/$teamId'
    | '/orgs_/$orgId_/teams_/$teamId_/members'
    | '/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignInRoute: typeof SignInRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  OrgsOrgIdRoute: typeof OrgsOrgIdRoute
  OrgsOrgIdMembersRoute: typeof OrgsOrgIdMembersRoute
  OrgsOrgIdTeamsTeamIdRoute: typeof OrgsOrgIdTeamsTeamIdRoute
  OrgsOrgIdTeamsTeamIdMembersRoute: typeof OrgsOrgIdTeamsTeamIdMembersRoute
  OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute: typeof OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignInRoute: SignInRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  OrgsOrgIdRoute: OrgsOrgIdRoute,
  OrgsOrgIdMembersRoute: OrgsOrgIdMembersRoute,
  OrgsOrgIdTeamsTeamIdRoute: OrgsOrgIdTeamsTeamIdRoute,
  OrgsOrgIdTeamsTeamIdMembersRoute: OrgsOrgIdTeamsTeamIdMembersRoute,
  OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute:
    OrgsOrgIdTeamsTeamIdSprintsSprintIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/sign-in",
        "/auth/callback",
        "/orgs_/$orgId",
        "/orgs_/$orgId_/members",
        "/orgs_/$orgId_/teams_/$teamId",
        "/orgs_/$orgId_/teams_/$teamId_/members",
        "/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/auth/callback": {
      "filePath": "auth.callback.tsx"
    },
    "/orgs_/$orgId": {
      "filePath": "orgs_.$orgId.tsx"
    },
    "/orgs_/$orgId_/members": {
      "filePath": "orgs_.$orgId_.members.tsx"
    },
    "/orgs_/$orgId_/teams_/$teamId": {
      "filePath": "orgs_.$orgId_.teams_.$teamId.tsx"
    },
    "/orgs_/$orgId_/teams_/$teamId_/members": {
      "filePath": "orgs_.$orgId_.teams_.$teamId_.members.tsx"
    },
    "/orgs_/$orgId_/teams_/$teamId_/sprints_/$sprintId": {
      "filePath": "orgs_.$orgId_.teams_.$teamId_.sprints_.$sprintId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
