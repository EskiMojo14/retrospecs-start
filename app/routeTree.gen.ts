/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as IndexIndexImport } from './routes/_index/index'
import { Route as AuthCallbackImport } from './routes/auth.callback'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const IndexIndexRoute = IndexIndexImport.update({
  id: '/_index/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/_index/': {
      id: '/_index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/': typeof IndexIndexRoute
}

export interface FileRoutesByTo {
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/': typeof IndexIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/sign-in': typeof SignInRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/_index/': typeof IndexIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sign-in' | '/auth/callback' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/auth/callback' | '/'
  id: '__root__' | '/sign-in' | '/auth/callback' | '/_index/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SignInRoute: typeof SignInRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  IndexIndexRoute: typeof IndexIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  SignInRoute: SignInRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  IndexIndexRoute: IndexIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/sign-in",
        "/auth/callback",
        "/_index/"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/auth/callback": {
      "filePath": "auth.callback.tsx"
    },
    "/_index/": {
      "filePath": "_index/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
